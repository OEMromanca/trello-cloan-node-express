openapi: 3.0.0
info:
  title: Trello Clone API
  description: API documentation for the Trello Clone application.
  version: 1.0.0
servers:
  - url: https://trello-clone-latest.onrender.com
paths:
  /api/csrf-token:
    get:
      summary: Get CSRF token
      responses:
        '200':
          description: Successfully retrieved CSRF token.
  /users:
    get:
      summary: Retrieve all users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved users.
  /users/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "r.jamrisko@gmail.com"
                password:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: Successful login.
  /users/delete-user/{userId}:
    delete:
      summary: Delete user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: User successfully deleted.
  /users/edit-user/{userId}:
    put:
      summary: Edit user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: "Romeo"
                lastName:
                  type: string
                  example: "Dzem"
                email:
                  type: string
                  example: "r.jamrisko@gmail.com"
      responses:
        '200':
          description: User successfully edited.
  /users/assign-role:
    post:
      summary: Assign role to user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: "6703ad8cc1d6e31fbdf471eb"
                role:
                  type: string
                  example: "admin"
      responses:
        '200':
          description: Role successfully assigned.
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: "Romanko"
                lastName:
                  type: string
                  example: "Jamri"
                email:
                  type: string
                  example: "jamrisko@gmail.com"
                password:
                  type: string
                  example: "123456"
      responses:
        '201':
          description: Successful registration.
  /users/logout:
    post:
      summary: User logout
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Successful logout.
  /users/profile:
    get:
      summary: Retrieve logged-in user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved profile.
  /users/reset-password-request:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "r.jamrisko@gmail.com"
      responses:
        '200':
          description: Successful password reset request.
  /users/reset-password/{userId}/{token}:
    post:
      summary: Reset password
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: token
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: "12345644"
      responses:
        '200':
          description: Password successfully reset.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
